<style>

</style>
</head>
<link rel="stylesheet" href="css/cart.css">
<body>
  <main class="container">
    <h1 class="page-title">Gi·ªè h√†ng c·ªßa b·∫°n</h1>

    <!-- Ph·∫ßn gi·ªè h√†ng -->
    <div class="cart-container" id="cart-section">
      <div class="cart-items">
        <div class="cart-header">
          <div class="select-all">
            <input type="checkbox" id="select-all-checkbox">
            <label for="select-all-checkbox">Ch·ªçn t·∫•t c·∫£</label>
          </div>
        </div>
        <% carts.forEach((cart)=>{%>
        <div class="cart-item" data-id="<%= cart._id%>" data-price="<%= cart.product.price%>">
          <input type="checkbox" class="item-checkbox">
          <img src="<%= cart.product.preview%>" alt="ƒêi·ªán tho·∫°i Samsung Galaxy S23" class="item-image">
          <div class="item-details">
            <h3 class="item-name"><%= cart.product.name%></h3>
            <div class="item-price"><%= formatVND(cart.product.price)%></div>
            <div class="item-actions">
              <div class="quantity-control">
                <button class="quantity-btn decrease-btn">-</button>
                <input type="text" class="quantity-input" value="1" readonly>
                <button class="quantity-btn increase-btn">+</button>
              </div>
              <button class="remove-btn">X√≥a</button>
            </div>
          </div>
          <div class="item-subtotal">18.990.000‚Ç´</div>
        </div>
        <%})%>

      </div>
      <div class="cart-summary">
        <h2 class="summary-title">T·ªïng gi·ªè h√†ng</h2>
        <div class="summary-row">
          <span class="summary-label">T·∫°m t√≠nh</span>
          <span class="summary-value" id="subtotal">0‚Ç´</span>
        </div>
        <div class="summary-row">
          <span class="summary-label">Ph√≠ v·∫≠n chuy·ªÉn</span>
          <span class="summary-value">Mi·ªÖn ph√≠</span>
        </div>
        <div class="total-row">
          <span>T·ªïng c·ªông</span>
          <span id="total">0‚Ç´</span>
        </div>
        <button class="checkout-btn" id="continue-btn">Ti·∫øp t·ª•c</button>
        <a href="/" class="continue-shopping">Ti·∫øp t·ª•c mua s·∫Øm</a>
      </div>
    </div>


    <!-- Ph·∫ßn th√¥ng tin giao h√†ng -->
    <div class="shipping-container" id="shipping-section">
      <div class="shipping-form">
        <h2 class="form-title">Th√¥ng tin giao h√†ng</h2>

        <div class="form-group">
          <label for="fullname" class="form-label">H·ªç v√† t√™n</label>
          <input type="text" id="fullname" value="<%= user.name%>" class="form-input" placeholder="Nh·∫≠p h·ªç v√† t√™n ng∆∞·ªùi nh·∫≠n">
        </div>

        <div class="form-group">
          <label for="phone" value="<%= user.phone%>" class="form-label">S·ªë ƒëi·ªán tho·∫°i</label>
          <input type="tel" id="phone" class="form-input" placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i li√™n h·ªá">
        </div>

        

        <div class="form-group">
          <label for="address" class="form-label">ƒê·ªãa ch·ªâ c·ª• th·ªÉ</label>
          <input type="text" <%= user.address%>  id="address" class="form-input" placeholder="S·ªë nh√†, t√™n ƒë∆∞·ªùng, ph∆∞·ªùng/x√£...">
        </div>

        <div class="form-group">
          <label for="notes" class="form-label">Ghi ch√∫</label>
          <textarea id="notes" class="form-input" rows="3" placeholder="Ghi ch√∫ v·ªÅ ƒë∆°n h√†ng, v√≠ d·ª•: th·ªùi gian hay ch·ªâ d·∫´n ƒë·ªãa ƒëi·ªÉm giao h√†ng chi ti·∫øt h∆°n."></textarea>
        </div>

        <div class="order-summary">
          <h3 class="order-summary-title">Th√¥ng tin ƒë∆°n h√†ng</h3>
          <div class="summary-row">
            <span class="summary-label">S·ªë l∆∞·ª£ng s·∫£n ph·∫©m</span>
            <span class="summary-value" id="order-item-count">0</span>
          </div>
          <div class="summary-row">
            <span class="summary-label">T·∫°m t√≠nh</span>
            <span class="summary-value" id="order-subtotal">0‚Ç´</span>
          </div>
          <div class="summary-row">
            <span class="summary-label">Ph√≠ v·∫≠n chuy·ªÉn</span>
            <span class="summary-value">Mi·ªÖn ph√≠</span>
          </div>
          <div class="total-row">
            <span>T·ªïng c·ªông</span>
            <span id="order-total">0‚Ç´</span>
          </div>
        </div>

        <div class="form-actions">
          <button class="back-btn" id="back-to-cart-btn">Quay l·∫°i gi·ªè h√†ng</button>
          <button class="payment-btn">Thanh to√°n</button>
        </div>
      </div>
    </div>

    <!-- Ph·∫ßn gi·ªè h√†ng tr·ªëng -->
    <div class="empty-cart" id="empty-cart">
      <div class="empty-cart-icon">üõí</div>
      <h2 class="empty-cart-text">Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng</h2>
      <a href="#" class="shop-now-btn">Mua s·∫Øm ngay</a>
    </div>
  </main>
  <form style="display: none;" action="/cart/:id/delete" method="post" id="delete-form"></form>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // L·∫•y c√°c ph·∫ßn t·ª≠ DOM
      const selectAllCheckbox = document.getElementById('select-all-checkbox');
      const itemCheckboxes = document.querySelectorAll('.item-checkbox');
      const cartItems = document.querySelectorAll('.cart-item');
      const cartItemsContainer = document.querySelector('.cart-items');
      const emptyCart = document.getElementById('empty-cart');
      const cartContainer = document.querySelector('.cart-container');
      const subtotalElement = document.getElementById('subtotal');
      const totalElement = document.getElementById('total');
      const continueBtn = document.getElementById('continue-btn');

      // Ph·∫ßn t·ª≠ trang th√¥ng tin giao h√†ng
      const cartSection = document.getElementById('cart-section');
      const shippingSection = document.getElementById('shipping-section');
      const backToCartBtn = document.getElementById('back-to-cart-btn');
      const orderItemCount = document.getElementById('order-item-count');
      const orderSubtotal = document.getElementById('order-subtotal');
      const orderTotal = document.getElementById('order-total');

      // ƒê·ªãnh d·∫°ng ti·ªÅn t·ªá

      function formatCurrency(amount) {
        return amount.toLocaleString('vi-VN', {
          style: 'currency',
          currency: 'VND',
        });
      }

      // T√≠nh to√°n t·ªïng ti·ªÅn c·ªßa c√°c s·∫£n ph·∫©m ƒë√£ ch·ªçn
      function calculateTotal() {
        let subtotal = 0;
        let selectedCount = 0;

        cartItems.forEach(item => {
          const checkbox = item.querySelector('.item-checkbox');
          if (checkbox.checked) {
            const price = parseInt(item.getAttribute('data-price'));
            const quantity = parseInt(item.querySelector('.quantity-input').value);
            subtotal += price * quantity;
            selectedCount += quantity;
          }
        });

        subtotalElement.textContent = formatCurrency(subtotal);
        totalElement.textContent = formatCurrency(subtotal);

        // C·∫≠p nh·∫≠t th√¥ng tin ƒë∆°n h√†ng ·ªü trang giao h√†ng
        orderItemCount.textContent = selectedCount;
        orderSubtotal.textContent = formatCurrency(subtotal);
        orderTotal.textContent = formatCurrency(subtotal);

        // Ki·ªÉm tra n·∫øu kh√¥ng c√≥ s·∫£n ph·∫©m n√†o ƒë∆∞·ª£c ch·ªçn
        const hasSelectedItems = Array.from(itemCheckboxes).some(checkbox => checkbox.checked);
        continueBtn.disabled = !hasSelectedItems;
        continueBtn.style.opacity = hasSelectedItems ? '1' : '0.5';
      }

      // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn c·ªßa m·ªôt s·∫£n ph·∫©m
      function updateItemSubtotal(item) {
        const price = parseInt(item.getAttribute('data-price'));
        const quantity = parseInt(item.querySelector('.quantity-input').value);
        const subtotal = price * quantity;
        item.querySelector('.item-subtotal').textContent = formatCurrency(subtotal);
      }

      // Ki·ªÉm tra tr·∫°ng th√°i "Ch·ªçn t·∫•t c·∫£"
      function checkSelectAllStatus() {
        const allChecked = Array.from(itemCheckboxes).every(checkbox => checkbox.checked);
        selectAllCheckbox.checked = allChecked && itemCheckboxes.length > 0;
      }

      // Ki·ªÉm tra n·∫øu gi·ªè h√†ng tr·ªëng
      function checkEmptyCart() {
        const hasItems = cartItems.length > 0;
        cartContainer.style.display = hasItems ? 'flex' : 'none';
        emptyCart.style.display = hasItems ? 'none' : 'block';
      }

      // X·ª≠ l√Ω s·ª± ki·ªán ch·ªçn t·∫•t c·∫£
      selectAllCheckbox.addEventListener('change', function() {
        const isChecked = this.checked;

        itemCheckboxes.forEach(checkbox => {
          checkbox.checked = isChecked;
          const cartItem = checkbox.closest('.cart-item');
          if (isChecked) {
            cartItem.classList.add('selected');
          } else {
            cartItem.classList.remove('selected');
          }
        });

        calculateTotal();
      });

      // X·ª≠ l√Ω s·ª± ki·ªán ch·ªçn t·ª´ng s·∫£n ph·∫©m
      itemCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('change', function() {
          const cartItem = this.closest('.cart-item');

          if (this.checked) {
            cartItem.classList.add('selected');
          } else {
            cartItem.classList.remove('selected');
          }

          checkSelectAllStatus();
          calculateTotal();
        });
      });

      // X·ª≠ l√Ω s·ª± ki·ªán tƒÉng s·ªë l∆∞·ª£ng
      document.querySelectorAll('.increase-btn').forEach(button => {
        button.addEventListener('click', function() {
          const item = this.closest('.cart-item');
          const quantityInput = item.querySelector('.quantity-input');
          let quantity = parseInt(quantityInput.value);

          quantityInput.value = ++quantity;
          updateItemSubtotal(item);
          calculateTotal();
        });
      });

      // X·ª≠ l√Ω s·ª± ki·ªán gi·∫£m s·ªë l∆∞·ª£ng
      document.querySelectorAll('.decrease-btn').forEach(button => {
        button.addEventListener('click', function() {
          const item = this.closest('.cart-item');
          const quantityInput = item.querySelector('.quantity-input');
          let quantity = parseInt(quantityInput.value);

          if (quantity > 1) {
            quantityInput.value = --quantity;
            updateItemSubtotal(item);
            calculateTotal();
          }
        });
      });

      // X·ª≠ l√Ω s·ª± ki·ªán x√≥a s·∫£n ph·∫©m
      const deleteForm = document.getElementById('delete-form')
      document.querySelectorAll('.remove-btn').forEach(button => {
        button.addEventListener('click', function() {
          const cartID = this.parentElement.parentElement.parentElement.dataset.id;
          deleteForm.action = `/cart/${cartID}/delete`
          deleteForm.submit()
          
          // const item = this.closest('.cart-item');

          // // Hi·ªáu ·ª©ng x√≥a
          // item.style.opacity = '0';
          // item.style.height = '0';
          // item.style.overflow = 'hidden';
          // item.style.transition = 'all 0.3s ease';

          // setTimeout(() => {
          //   item.remove();
          //   checkSelectAllStatus();
          //   calculateTotal();
          //   checkEmptyCart();
          // }, 300);
        });
      });

      // X·ª≠ l√Ω s·ª± ki·ªán ti·∫øp t·ª•c ƒë·∫øn trang th√¥ng tin giao h√†ng
      continueBtn.addEventListener('click', function() {


        const selectedItems = Array.from(cartItems).filter(item =>
          item.querySelector('.item-checkbox').checked
        );
        console.log(selectedItems);


        if (selectedItems.length > 0) {
          // Chuy·ªÉn ƒë·∫øn trang th√¥ng tin giao h√†ng
          cartSection.style.display = 'none';
          shippingSection.style.display = 'block';

          // Cu·ªôn l√™n ƒë·∫ßu trang
          window.scrollTo({
            top: 0,
            behavior: 'smooth'
          });

          // C·∫≠p nh·∫≠t th√¥ng tin ƒë∆°n h√†ng
          calculateTotal();
        } else {
          alert('Vui l√≤ng ch·ªçn √≠t nh·∫•t m·ªôt s·∫£n ph·∫©m ƒë·ªÉ ti·∫øp t·ª•c');
        }
      });

      // X·ª≠ l√Ω s·ª± ki·ªán quay l·∫°i gi·ªè h√†ng
      backToCartBtn.addEventListener('click', function() {
        shippingSection.style.display = 'none';
        cartSection.style.display = 'flex';

        // Cu·ªôn l√™n ƒë·∫ßu trang
        window.scrollTo({
          top: 0,
          behavior: 'smooth'
        });
      });

      // Kh·ªüi t·∫°o
      cartItems.forEach(updateItemSubtotal);
      checkEmptyCart();
      calculateTotal();
    });
  </script>
</body>