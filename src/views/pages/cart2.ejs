<link rel="stylesheet" href="css/cart.css">

<body>
  <main class="container">
    <h1 class="page-title">Gi·ªè h√†ng c·ªßa b·∫°n</h1>
    <!-- Ph·∫ßn gi·ªè h√†ng -->
    <div class="cart-container" id="cart-section">
      <div class="cart-items">
        <div class="cart-header">
          <div class="select-all">
            <input type="checkbox" id="select-all-checkbox">
            <label for="select-all-checkbox">Ch·ªçn t·∫•t c·∫£</label>
          </div>
        </div>
        <!-- M·∫´u s·∫£n ph·∫©m trong gi·ªè h√†ng -->
        <% carts.forEach((cart)=>{%>
        <div class="cart-item" data-id="<%= cart._id%>" data-product="<%= cart.product._id%>" data-price="<%= cart.product.price%>">
          <input type="checkbox" class="item-checkbox" <% if (cart.product.amount==0){%> disabled<%}%>>
          <img src="<%= cart.product.preview%>" alt="ƒêi·ªán tho·∫°i Samsung Galaxy S23" class="item-image">
          <div class="item-details">
            <h3 class="item-name"><%= cart.product.name%></h3>
            <div class="item-price"><%= formatVND(cart.product.price)%></div>
            <div class="item-actions">
              <% if (cart.product.amount>0){%>
              <div class="quantity-control" data-amount="<%= cart.product.amount%>">
                <button class="quantity-btn decrease-btn">-</button>
                <input type="text" class="quantity-input" value="1" readonly>
                <button class="quantity-btn increase-btn">+</button>
              </div>

              <%}else{%> H·∫øt h√†ng <%}%>
              
              <button class="remove-btn">X√≥a</button>
            </div>
          </div>
          <div class="item-subtotal">18.990.000‚Ç´</div>
        </div>
        <%})%>
            </div>
            <div class="cart-summary">
              <h2 class="summary-title">T·ªïng gi·ªè h√†ng</h2>
              <div class="summary-row">
                <span class="summary-label">T·∫°m t√≠nh</span>
                <span class="summary-value" id="subtotal">0‚Ç´</span>
              </div>
              <div class="summary-row">
                <span class="summary-label">Ph√≠ v·∫≠n chuy·ªÉn</span>
                <span class="summary-value">Mi·ªÖn ph√≠</span>
              </div>
              <div class="total-row">
                <span>T·ªïng c·ªông</span>
                <span id="total">0‚Ç´</span>
              </div>
              <button class="checkout-btn" id="continue-btn">Ti·∫øp t·ª•c</button>
              <a href="/" class="continue-shopping">Ti·∫øp t·ª•c mua s·∫Øm</a>
            </div>
          </div>

          <!-- Ph·∫ßn th√¥ng tin giao h√†ng -->
          <div class="shipping-container" id="shipping-section">
            <div class="shipping-form">
              <h2 class="form-title">Th√¥ng tin giao h√†ng</h2>

              <div class="form-group">
                <label for="fullname" class="form-label">H·ªç v√† t√™n <span style="color: #dc3545">*</span></label>
                <input type="text" id="fullname" class="form-input" placeholder="Nh·∫≠p h·ªç v√† t√™n ng∆∞·ªùi nh·∫≠n" required>
                <div class="error-message" id="fullname-error">Vui l√≤ng nh·∫≠p h·ªç v√† t√™n</div>
              </div>

              <div class="form-group">
                <label for="phone" class="form-label">S·ªë ƒëi·ªán tho·∫°i <span style="color: #dc3545">*</span></label>
                <input type="tel" id="phone" class="form-input" placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i li√™n h·ªá" required>
                <div class="error-message" id="phone-error">Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i h·ª£p l·ªá</div>
              </div>

              <div class="form-group">
                <label for="address" class="form-label">ƒê·ªãa ch·ªâ c·ª• th·ªÉ <span style="color: #dc3545">*</span></label>
                <input type="text" id="address" class="form-input" placeholder="S·ªë nh√†, t√™n ƒë∆∞·ªùng, ph∆∞·ªùng/x√£..." required>
                <div class="error-message" id="address-error">Vui l√≤ng nh·∫≠p ƒë·ªãa ch·ªâ giao h√†ng</div>
              </div>

              <div class="form-group">
                <label for="notes" class="form-label">Ghi ch√∫</label>
                <textarea id="notes" class="form-input" rows="3" placeholder="Ghi ch√∫ v·ªÅ ƒë∆°n h√†ng, v√≠ d·ª•: th·ªùi gian hay ch·ªâ d·∫´n ƒë·ªãa ƒëi·ªÉm giao h√†ng chi ti·∫øt h∆°n."></textarea>
              </div>

              <!-- Ph∆∞∆°ng th·ª©c thanh to√°n -->
              <div class="payment-methods">
                <h3 class="payment-methods-title">Ph∆∞∆°ng th·ª©c thanh to√°n <span style="color: #dc3545">*</span></h3>

                <div class="payment-method" id="cod-method">
                  <input type="radio" name="payment-method" id="cod" class="payment-method-radio" value="cod">
                  <div class="payment-method-icon">üíµ</div>
                  <div class="payment-method-details">
                    <div class="payment-method-name">Thanh to√°n khi nh·∫≠n h√†ng (COD)</div>
                    <div class="payment-method-description">B·∫°n s·∫Ω thanh to√°n b·∫±ng ti·ªÅn m·∫∑t khi nh·∫≠n h√†ng</div>
                  </div>
                </div>

                <div class="payment-method" id="bank-method">
                  <input type="radio" name="payment-method" id="bank" class="payment-method-radio" value="bank">
                  <div class="payment-method-icon">üè¶</div>
                  <div class="payment-method-details">
                    <div class="payment-method-name">Chuy·ªÉn kho·∫£n ng√¢n h√†ng</div>
                    <div class="payment-method-description">Chuy·ªÉn kho·∫£n qua ng√¢n h√†ng tr∆∞·ªõc khi giao h√†ng</div>
                  </div>
                </div>

                <div class="bank-details" id="bank-details">
                  <div class="bank-info">
                    <span class="bank-info-label">Ng√¢n h√†ng:</span>
                    <span class="bank-info-value">Vietcombank</span>
                  </div>
                  <div class="bank-info">
                    <span class="bank-info-label">S·ªë t√†i kho·∫£n:</span>
                    <span class="bank-info-value">1234567890</span>
                  </div>
                  <div class="bank-info">
                    <span class="bank-info-label">Ch·ªß t√†i kho·∫£n:</span>
                    <span class="bank-info-value">C√îNG TY TNHH ABC</span>
                  </div>
                  <div class="bank-info">
                    <span class="bank-info-label">N·ªôi dung chuy·ªÉn kho·∫£n:</span>
                    <span class="bank-info-value">Thanh to√°n ƒë∆°n h√†ng #<span id="order-id">12345</span></span>
                  </div>
                </div>

                <div class="error-message" id="payment-method-error">Vui l√≤ng ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n</div>
              </div>

              <div class="order-summary">
                <h3 class="order-summary-title">Th√¥ng tin ƒë∆°n h√†ng</h3>
                <div class="summary-row">
                  <span class="summary-label">S·ªë l∆∞·ª£ng s·∫£n ph·∫©m</span>
                  <span class="summary-value" id="order-item-count">0</span>
                </div>
                <div class="summary-row">
                  <span class="summary-label">T·∫°m t√≠nh</span>
                  <span class="summary-value" id="order-subtotal">0‚Ç´</span>
                </div>
                <div class="summary-row">
                  <span class="summary-label">Ph√≠ v·∫≠n chuy·ªÉn</span>
                  <span class="summary-value">Mi·ªÖn ph√≠</span>
                </div>
                <div class="total-row">
                  <span>T·ªïng c·ªông</span>
                  <span id="order-total">0‚Ç´</span>
                </div>
              </div>

              <div class="form-actions">
                <button class="back-btn" id="back-to-cart-btn">Quay l·∫°i gi·ªè h√†ng</button>
                <button class="payment-btn" id="payment-btn">Thanh to√°n</button>
              </div>
            </div>
          </div>

          <!-- Ph·∫ßn gi·ªè h√†ng tr·ªëng -->
          <div class="empty-cart" id="empty-cart">
            <div class="empty-cart-icon">üõí</div>
            <h2 class="empty-cart-text">Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng</h2>
            <a href="/" class="shop-now-btn">Mua s·∫Øm ngay</a>
          </div>
  </main>
  <form style="display: none;" action="/cart/:id/delete" method="post" id="delete-form"></form>
  <form style="display: none;" action="/cart/buy" method="post" id="checkout-form">
    <input type="hidden" name="items" id="checkout-items">
    <input type="hidden" name="name" id="checkout-fullname">
    <input type="hidden" name="phone" id="checkout-phone">
    <input type="hidden" name="address" id="checkout-address">
    <input type="hidden" name="notes" id="checkout-notes">
    <input type="hidden" name="paymentMethod" id="checkout-payment-method">
    <input type="hidden" name="price" id="checkout-total">
  </form>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // L·∫•y c√°c ph·∫ßn t·ª≠ DOM
      const selectAllCheckbox = document.getElementById('select-all-checkbox');
      const itemCheckboxes = document.querySelectorAll('.item-checkbox');
      const cartItems = document.querySelectorAll('.cart-item');
      const cartItemsContainer = document.querySelector('.cart-items');
      const emptyCart = document.getElementById('empty-cart');
      const cartContainer = document.querySelector('.cart-container');
      const subtotalElement = document.getElementById('subtotal');
      const totalElement = document.getElementById('total');
      const continueBtn = document.getElementById('continue-btn');

      // Ph·∫ßn t·ª≠ trang th√¥ng tin giao h√†ng
      const cartSection = document.getElementById('cart-section');
      const shippingSection = document.getElementById('shipping-section');
      const backToCartBtn = document.getElementById('back-to-cart-btn');
      const orderItemCount = document.getElementById('order-item-count');
      const orderSubtotal = document.getElementById('order-subtotal');
      const orderTotal = document.getElementById('order-total');

      // Form elements
      const fullnameInput = document.getElementById('fullname');
      const phoneInput = document.getElementById('phone');
      const addressInput = document.getElementById('address');
      const notesInput = document.getElementById('notes');
      const paymentMethodRadios = document.querySelectorAll('input[name="payment-method"]');
      const paymentBtn = document.getElementById('payment-btn');
      const checkoutForm = document.getElementById('checkout-form');

      // Payment method elements
      const codMethod = document.getElementById('cod-method');
      const bankMethod = document.getElementById('bank-method');
      const bankDetails = document.getElementById('bank-details');

      // Error messages
      const fullnameError = document.getElementById('fullname-error');
      const phoneError = document.getElementById('phone-error');
      const addressError = document.getElementById('address-error');
      const paymentMethodError = document.getElementById('payment-method-error');

      // ƒê·ªãnh d·∫°ng ti·ªÅn t·ªá
      // function formatCurrency(amount) {
      //   return amount.toLocaleString('vi-VN') + '‚Ç´';
      // }
      function formatCurrency(amount) {
        return amount.toLocaleString('vi-VN', {
          style: 'currency',
          currency: 'VND',
        });
      }

      // T√≠nh to√°n t·ªïng ti·ªÅn c·ªßa c√°c s·∫£n ph·∫©m ƒë√£ ch·ªçn
      function calculateTotal() {
        let subtotal = 0;
        let selectedCount = 0;

        cartItems.forEach(item => {
          const checkbox = item.querySelector('.item-checkbox');
          if (checkbox.checked) {
            const price = parseInt(item.getAttribute('data-price'));
            const quantity = parseInt(item.querySelector('.quantity-input').value);
            subtotal += price * quantity;
            selectedCount += quantity;
          }
        });

        subtotalElement.textContent = formatCurrency(subtotal);
        totalElement.textContent = formatCurrency(subtotal);

        // C·∫≠p nh·∫≠t th√¥ng tin ƒë∆°n h√†ng ·ªü trang giao h√†ng
        orderItemCount.textContent = selectedCount;
        orderSubtotal.textContent = formatCurrency(subtotal);
        orderTotal.textContent = formatCurrency(subtotal);

        // Ki·ªÉm tra n·∫øu kh√¥ng c√≥ s·∫£n ph·∫©m n√†o ƒë∆∞·ª£c ch·ªçn
        const hasSelectedItems = Array.from(itemCheckboxes).some(checkbox => checkbox.checked);
        continueBtn.disabled = !hasSelectedItems;
        continueBtn.style.opacity = hasSelectedItems ? '1' : '0.5';

        return subtotal;
      }

      // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn c·ªßa m·ªôt s·∫£n ph·∫©m
      function updateItemSubtotal(item) {
        const price = parseInt(item.getAttribute('data-price'));
        const quantityElement = item.querySelector('.quantity-input')
        let quantity = 1
        if (quantityElement) {
          quantity = parseInt(quantityElement.value);

        }
        const subtotal = price * quantity;
        item.querySelector('.item-subtotal').textContent = formatCurrency(subtotal);
      }

      // Ki·ªÉm tra tr·∫°ng th√°i "Ch·ªçn t·∫•t c·∫£"
      function checkSelectAllStatus() {
        const allChecked = Array.from(itemCheckboxes).every(checkbox => checkbox.checked);
        selectAllCheckbox.checked = allChecked && itemCheckboxes.length > 0;
      }

      // Ki·ªÉm tra n·∫øu gi·ªè h√†ng tr·ªëng
      function checkEmptyCart() {
        const hasItems = cartItems.length > 0;
        cartContainer.style.display = hasItems ? 'flex' : 'none';
        emptyCart.style.display = hasItems ? 'none' : 'block';
      }

      // Validate form
      function validateForm() {
        let isValid = true;

        // Validate fullname
        if (!fullnameInput.value.trim()) {
          fullnameInput.classList.add('error');
          fullnameError.style.display = 'block';
          isValid = false;
        } else {
          fullnameInput.classList.remove('error');
          fullnameError.style.display = 'none';
        }

        // Validate phone
        const phoneRegex = /^(0|\+84)[3|5|7|8|9][0-9]{8}$/;
        if (!phoneRegex.test(phoneInput.value.trim())) {
          phoneInput.classList.add('error');
          phoneError.style.display = 'block';
          isValid = false;
        } else {
          phoneInput.classList.remove('error');
          phoneError.style.display = 'none';
        }

        // Validate address
        if (!addressInput.value.trim()) {
          addressInput.classList.add('error');
          addressError.style.display = 'block';
          isValid = false;
        } else {
          addressInput.classList.remove('error');
          addressError.style.display = 'none';
        }

        // Validate payment method
        const selectedPaymentMethod = document.querySelector('input[name="payment-method"]:checked');
        if (!selectedPaymentMethod) {
          paymentMethodError.style.display = 'block';
          isValid = false;
        } else {
          paymentMethodError.style.display = 'none';
        }

        return isValid;
      }

      // Prepare checkout data
      function prepareCheckoutData() {
        const selectedItems = Array.from(cartItems)
          .filter(item => item.querySelector('.item-checkbox').checked)
          .map(item => {
            const product = item.getAttribute('data-product');
            const quantity = item.querySelector('.quantity-input').value;
            return {
              product,
              quantity
            };
          });

        const selectedPaymentMethod = document.querySelector('input[name="payment-method"]:checked').value;
        const total = calculateTotal();

        // Set form values
        document.getElementById('checkout-items').value = JSON.stringify(selectedItems);
        document.getElementById('checkout-fullname').value = fullnameInput.value;
        document.getElementById('checkout-phone').value = phoneInput.value;
        document.getElementById('checkout-address').value = addressInput.value;
        document.getElementById('checkout-notes').value = notesInput.value;
        document.getElementById('checkout-payment-method').value = selectedPaymentMethod;
        document.getElementById('checkout-total').value = total;

        return {
          items: selectedItems,
          fullname: fullnameInput.value,
          phone: phoneInput.value,
          address: addressInput.value,
          notes: notesInput.value,
          payment_method: selectedPaymentMethod,
          total: total
        };
      }

      // X·ª≠ l√Ω s·ª± ki·ªán ch·ªçn t·∫•t c·∫£
      selectAllCheckbox.addEventListener('change', function() {
        const isChecked = this.checked;

        itemCheckboxes.forEach(checkbox => {
          if (checkbox.disabled)
            return

          checkbox.checked = isChecked;
          const cartItem = checkbox.closest('.cart-item');
          if (isChecked) {
            cartItem.classList.add('selected');
          } else {
            cartItem.classList.remove('selected');
          }
        });

        calculateTotal();
      });

      // X·ª≠ l√Ω s·ª± ki·ªán ch·ªçn t·ª´ng s·∫£n ph·∫©m
      itemCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('change', function() {
          const cartItem = this.closest('.cart-item');

          if (this.checked) {
            cartItem.classList.add('selected');
          } else {
            cartItem.classList.remove('selected');
          }

          checkSelectAllStatus();
          calculateTotal();
        });
      });

      // X·ª≠ l√Ω s·ª± ki·ªán tƒÉng s·ªë l∆∞·ª£ng
      document.querySelectorAll('.increase-btn').forEach(button => {
        button.addEventListener('click', function() {
          const maxAmount = this.parentElement.dataset.amount

          const item = this.closest('.cart-item');
          const quantityInput = item.querySelector('.quantity-input');
          let quantity = parseInt(quantityInput.value);


          if (quantityInput.value < parseInt(maxAmount)) {

            quantityInput.value = ++quantity;

          }
          updateItemSubtotal(item);
          calculateTotal();
        });
      });

      // X·ª≠ l√Ω s·ª± ki·ªán gi·∫£m s·ªë l∆∞·ª£ng
      document.querySelectorAll('.decrease-btn').forEach(button => {
        button.addEventListener('click', function() {
          const item = this.closest('.cart-item');
          const quantityInput = item.querySelector('.quantity-input');
          let quantity = parseInt(quantityInput.value);

          if (quantity > 1) {
            quantityInput.value = --quantity;
            updateItemSubtotal(item);
            calculateTotal();
          }
        });
      });

      // X·ª≠ l√Ω s·ª± ki·ªán x√≥a s·∫£n ph·∫©m
      const deleteForm = document.getElementById('delete-form');
      document.querySelectorAll('.remove-btn').forEach(button => {
        button.addEventListener('click', function() {
          const cartItem = this.closest('.cart-item');
          const cartID = cartItem.dataset.id;
          deleteForm.action = `/cart/${cartID}/delete`;
          deleteForm.submit();
        });
      });

      // X·ª≠ l√Ω s·ª± ki·ªán ti·∫øp t·ª•c ƒë·∫øn trang th√¥ng tin giao h√†ng
      continueBtn.addEventListener('click', function() {
        const selectedItems = Array.from(cartItems).filter(item =>
          item.querySelector('.item-checkbox').checked
        );

        if (selectedItems.length > 0) {
          // Chuy·ªÉn ƒë·∫øn trang th√¥ng tin giao h√†ng
          cartSection.style.display = 'none';
          shippingSection.style.display = 'block';

          // Cu·ªôn l√™n ƒë·∫ßu trang
          window.scrollTo({
            top: 0,
            behavior: 'smooth'
          });

          // C·∫≠p nh·∫≠t th√¥ng tin ƒë∆°n h√†ng
          calculateTotal();
        } else {
          alert('Vui l√≤ng ch·ªçn √≠t nh·∫•t m·ªôt s·∫£n ph·∫©m ƒë·ªÉ ti·∫øp t·ª•c');
        }
      });

      // X·ª≠ l√Ω s·ª± ki·ªán quay l·∫°i gi·ªè h√†ng
      backToCartBtn.addEventListener('click', function() {
        shippingSection.style.display = 'none';
        cartSection.style.display = 'flex';

        // Cu·ªôn l√™n ƒë·∫ßu trang
        window.scrollTo({
          top: 0,
          behavior: 'smooth'
        });
      });

      // X·ª≠ l√Ω s·ª± ki·ªán ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n
      codMethod.addEventListener('click', function() {
        document.getElementById('cod').checked = true;
        codMethod.classList.add('selected');
        bankMethod.classList.remove('selected');
        bankDetails.classList.remove('active');
        paymentMethodError.style.display = 'none';
      });

      bankMethod.addEventListener('click', function() {
        document.getElementById('bank').checked = true;
        bankMethod.classList.add('selected');
        codMethod.classList.remove('selected');
        bankDetails.classList.add('active');
        paymentMethodError.style.display = 'none';
      });

      // X·ª≠ l√Ω s·ª± ki·ªán input ƒë·ªÉ validate realtime
      fullnameInput.addEventListener('input', function() {
        if (this.value.trim()) {
          this.classList.remove('error');
          fullnameError.style.display = 'none';
        }
      });

      phoneInput.addEventListener('input', function() {
        const phoneRegex = /^(0|\+84)[3|5|7|8|9][0-9]{8}$/;
        if (phoneRegex.test(this.value.trim())) {
          this.classList.remove('error');
          phoneError.style.display = 'none';
        }
      });

      addressInput.addEventListener('input', function() {
        if (this.value.trim()) {
          this.classList.remove('error');
          addressError.style.display = 'none';
        }
      });

      // X·ª≠ l√Ω s·ª± ki·ªán thanh to√°n
      paymentBtn.addEventListener('click', function() {
        if (validateForm()) {
          const checkoutData = prepareCheckoutData();
          console.log('Checkout data:', checkoutData);

          // Submit form
          checkoutForm.submit();
        } else {
          // Cu·ªôn ƒë·∫øn l·ªói ƒë·∫ßu ti√™n
          const firstError = document.querySelector('.form-input.error');
          if (firstError) {
            firstError.scrollIntoView({
              behavior: 'smooth',
              block: 'center'
            });
          }
        }
      });

      // Kh·ªüi t·∫°o
      cartItems.forEach(updateItemSubtotal);
      checkEmptyCart();
      calculateTotal();
    });
  </script>
</body>